<Window xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
		xmlns:Data="clr-namespace:HM4DesignTool.Data"
		x:Class="HM4DesignTool.Forms.SettingsWindow"
		mc:Ignorable="d"
		Title="Design Tool Settings" Height="768" Width="1280" WindowStartupLocation="CenterScreen" ResizeMode="CanResizeWithGrip">
	<!-- diag:PresentationTraceSources.TraceLevel=High-->

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition/>
			<RowDefinition Height="Auto"/>
		</Grid.RowDefinitions>
		<TabControl HorizontalAlignment="Stretch" Grid.Row="0">
			<!-- General Tab -->
			<TabItem Header="General">
				<Grid Background="#FFF">
					<Grid.ColumnDefinitions>
						<ColumnDefinition/>
						<ColumnDefinition/>
					</Grid.ColumnDefinitions>
					<Grid HorizontalAlignment="Stretch" Margin="0" VerticalAlignment="Stretch"/>
					<StackPanel HorizontalAlignment="Stretch" Margin="0" VerticalAlignment="Stretch">
						<GroupBox x:Name="projectDirectoryGroup" Header="HM4 Project Directories" >
							<StackPanel Orientation="Vertical">
								<Grid Height="44">
									<Grid.ColumnDefinitions>
										<ColumnDefinition/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition/>
										<RowDefinition/>
									</Grid.RowDefinitions>
									<Label x:Name="projectDirectoryLabel" Content="Data directory (e.g, 'C:\hm4\data\')" FontStyle="Italic" FontSize="10" Margin="5,0,0,0"/>
									<TextBox x:Name="projectDirectoryPathText" Text="{Binding ProjectDirectoryPathValue, Mode=OneWay}" Grid.Column="0" Grid.Row="1" Margin="5,0" />
									<Button x:Name="projectDirectoryBrowseButton" Grid.Column="1" Grid.Row="1" Content="Browse" Margin="5,0" Padding="5,1" Click="projectDirectoryBrowseButton_Click"/>
								</Grid>
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition/>
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition/>
										<RowDefinition/>
									</Grid.RowDefinitions>
									<Label x:Name="projectPathScriptLabel" Content="Script directory (e.g, 'C:\hm4\data\script\')" FontStyle="Italic" FontSize="10" Margin="5,0,0,0"/>
									<TextBox x:Name="projectPathScriptText" Text="{Binding ProjectPathScriptValue, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="0" Grid.Row="1" Margin="5,0" IsEnabled="False" />
								</Grid>
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition/>
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition/>
										<RowDefinition/>
									</Grid.RowDefinitions>
									<Label x:Name="projectPathLevelLabel" Content="Level directory (e.g, 'C:\hm4\data\script\levels\')" FontStyle="Italic" FontSize="10" Margin="5,0,0,0"/>
									<TextBox x:Name="projectPathLevelText" Text="{Binding ProjectPathLevelValue, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="0" Grid.Row="1" Margin="5,0" IsEnabled="False" />
								</Grid>

								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition/>
										<RowDefinition/>
									</Grid.RowDefinitions>
									<Label x:Name="projectPathImagesLabel" Content="Images directory (e.g, 'C:\hm4\data\images\')" FontStyle="Italic" FontSize="10" Margin="5,0,0,0"/>
									<TextBox x:Name="projectPathImagesText" Text="{Binding ProjectPathImagesValue, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="0" Grid.Row="1" Margin="5,0" IsEnabled="False" />
								</Grid>

							</StackPanel>

						</GroupBox>
					</StackPanel>
				</Grid>
			</TabItem>
			<!-- Patient Types Tab -->
			<TabItem Header="Patient Types">
				<Grid Background="#FFF">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition/>
						<ColumnDefinition Width="Auto"/>
					</Grid.ColumnDefinitions>
					<!-- Patient Type Room List -->
					<GroupBox x:Name="patientTypeRoomGroup" Header="Room List" Margin="5,0">
						<ListBox x:Name="patientTypeRoomList"  MinWidth="150" SelectionChanged="patientTypeRoomList_SelectionChanged" />
					</GroupBox>

					<!-- Patient Type Check List -->
					<GroupBox Header="Patient Types" Grid.Column="1" Margin="5,0">
						<Grid  >
							<Grid.RowDefinitions>
								<RowDefinition/>
								<RowDefinition/>
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition/>
								<ColumnDefinition/>
							</Grid.ColumnDefinitions>

							<GroupBox x:Name="patientTypeMaleCheckListGroup" Header="Male Patients" Grid.Column="0" Grid.Row="0">
								<ListBox x:Name="patientTypeMaleCheckList" >
								</ListBox>
							</GroupBox>
							<GroupBox x:Name="patientTypeFemaleCheckListGroup" Header="Female Patients" Grid.Column="1" Grid.Row="0">
								<ListBox x:Name="patientTypeFemaleCheckList" >
								</ListBox>
							</GroupBox>

							<GroupBox x:Name="patientTypeOtherCheckListGroup" Header="Other Patients" Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2">
								<ListBox x:Name="patientTypeOtherCheckList" Margin="5" >
								</ListBox>
							</GroupBox>



						</Grid>
					</GroupBox>

					<!-- Patient Type Text List -->
					<GroupBox Grid.Column="2" Header="Current Patient List" Margin="5,0" MaxWidth="200" MinWidth="150">
						<Grid >
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition/>
							</Grid.RowDefinitions>
							<Label Grid.Row="0"  FontSize="10" FontStyle="Italic">
								<TextBlock TextWrapping="WrapWithOverflow" Text="Patient types are retrieved from the [imagesDirectory]/Patients/" />
							</Label>
							<TextBox Grid.Row="1" Text="{Binding PatientListPreview, Mode=OneWay}" IsEnabled="False"/>
						</Grid>
					</GroupBox>
				</Grid>
			</TabItem>
			<!-- Stations Tab -->
			<TabItem Header="Stations" HorizontalAlignment="Left" Height="20" VerticalAlignment="Top" Width="53.6">
				<Grid Background="#FFF">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition/>
						<ColumnDefinition Width="Auto"/>
					</Grid.ColumnDefinitions>
					<!-- Treatments Room List -->
					<GroupBox x:Name="stationRoomListGroup" Grid.Column="0" Header="Room List" Margin="5,0">
						<ListBox x:Name="stationRoomList"  MinWidth="150" SelectionChanged="stationRoomList_SelectionChanged" />
					</GroupBox>

					<!-- Treatments Overview -->
					<GroupBox Header="Stations" Grid.Column="1" Margin="5,0">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition/>
							</Grid.ColumnDefinitions>

							<!-- Treatments DataGrid List -->
							<DataGrid x:Name="stationDataGridView"    DataGridCell.Selected="DataGrid_GotFocus" ItemsSource="{Binding Path=StationList}" Grid.Column="0" Grid.Row="0" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" UseLayoutRounding="False" CanUserReorderColumns="False" CanUserResizeColumns="False" MinColumnWidth="75" ColumnHeaderHeight="30" Margin="5" AutoGenerateColumns="False" SelectionMode="Single" SelectionUnit="Cell" EnableRowVirtualization="False" CanUserResizeRows="False" HeadersVisibility="Column" CanUserAddRows="False"  >
								<DataGrid.Columns>
									<DataGridCheckBoxColumn Binding="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Select" MaxWidth="70" MinWidth="50"/>
									<DataGridTextColumn Binding="{Binding StationName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Station Full Name" MinWidth="50" Width="*"/>
									<DataGridTextColumn Binding="{Binding StationShortName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Station Short Name" MinWidth="50" Width="*"/>
									<DataGridComboBoxColumn x:Name="StationDifficultyUnlockedColumn" ItemsSource="{Binding DataContext.StationDifficultyModifierList, RelativeSource={RelativeSource AncestorType=Grid}}" SelectedValuePath="DifficultyUnlockedString"  TextBinding="{Binding DifficultyUnlockedString, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Difficulty Unlocked" Width="*"/>
							
									<DataGridTextColumn Binding="{Binding TreatmentColorString, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"  Header="Color Value" Width="*" Visibility="Hidden">
										<DataGridTextColumn.ElementStyle>
											<Style TargetType="{x:Type TextBlock}">
												<Setter Property="Background" Value="{Binding TreatmentColorBrush, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
												<Setter Property="Foreground" Value="{Binding TreatmentFontColorBrush, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
											</Style>
										</DataGridTextColumn.ElementStyle>
									</DataGridTextColumn>
								</DataGrid.Columns>
							</DataGrid>
							<Grid Grid.Column="0" Grid.Row="1">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition/>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>
								<!--<Button x:Name="treatmentRowButtonColor" Grid.Column="0" Grid.Row="0" Width="80" Margin="5,0" Click="treatmentRowButtonAdd_Click"> -->


								<xctk:ColorPicker Visibility="Hidden"  Grid.Column="0" Grid.Row="0" SelectedColor="{Binding TreatmentSelectColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=White}" UsingAlphaChannel="False" />
								<Label  Visibility="Hidden"  Content="Select the treatments and then add the color."  Grid.Column="1" Grid.Row="0"/>
								<Button x:Name="stationRowButtonAdd" Grid.Column="2" Grid.Row="0" Content="Add Station Row" Width="120" Margin="5,0" Command="{Binding Path=AddStationRowCommand}"/>
								<Button x:Name="stationRowButtonRemove" Grid.Column="3" Grid.Row="0" Content="Remove Station Row" Width="120" Margin="5,0" Command="{Binding Path=RemoveStationRowCommand}"/>
							</Grid>

						</Grid>
					</GroupBox>

				</Grid>


			</TabItem>

			<!-- Treatments Tab -->
			<TabItem x:Name="treatmentTabItem"   Header="Treatments">
				<Grid Background="#FFF">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition/>
						<ColumnDefinition Width="Auto"/>
					</Grid.ColumnDefinitions>
					<!-- Treatments Room List -->
					<GroupBox x:Name="treatmentRoomListGroup" Grid.Column="0" Header="Room List" Margin="5,0">
						<ListBox x:Name="treatmentRoomList"  MinWidth="150" SelectionChanged="treatmentRoomList_SelectionChanged" />
					</GroupBox>

					<!-- Treatments Overview -->
					<GroupBox Header="Treatments" Grid.Column="1" Margin="5,0">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition/>
							</Grid.ColumnDefinitions>

							<!-- Treatments DataGrid List -->
							<DataGrid x:Name="treatmentDataGridView"    DataGridCell.Selected="DataGrid_GotFocus" ItemsSource="{Binding Path=TreatmentList}" Grid.Column="0" Grid.Row="0" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" UseLayoutRounding="False" CanUserReorderColumns="False" CanUserResizeColumns="False" MinColumnWidth="75" ColumnHeaderHeight="30" Margin="5" AutoGenerateColumns="False" SelectionMode="Single" SelectionUnit="Cell" EnableRowVirtualization="False" CanUserResizeRows="False" HeadersVisibility="Column" CanUserAddRows="False"  >
								<DataGrid.Columns>
									<DataGridCheckBoxColumn Binding="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Select" MaxWidth="70" MinWidth="50"/>
									<DataGridTextColumn Binding="{Binding TreatmentName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Treatment Name" MinWidth="50" Width="*"/>
									<DataGridComboBoxColumn x:Name="difficultyUnlockedColumn" ItemsSource="{Binding DataContext.TreatmentDifficultyModifierList, RelativeSource={RelativeSource AncestorType=Grid}}" SelectedValuePath="DifficultyUnlockedString"  TextBinding="{Binding DifficultyUnlockedString, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Difficulty Unlocked" Width="*"/>
									<DataGridComboBoxColumn x:Name="StationTreatmentColumn" ItemsSource="{Binding DataContext.StationTreatmentList, RelativeSource={RelativeSource AncestorType=Grid}}" SelectedValuePath="StationOwnerString"  TextBinding="{Binding StationOwnerString, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Station" Width="*"/>
									<DataGridTextColumn Binding="{Binding HeartsValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Hearts Value" Width="*"/>
									<DataGridTextColumn Binding="{Binding Weight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Base Weight" Width="*" MaxWidth="80"/>
									<DataGridCheckBoxColumn Binding="{Binding Gesture, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Gesture" Width="*" MaxWidth="60"/>
									<DataGridCheckBoxColumn Binding="{Binding AlwaysLast, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Always Last" Width="*" MaxWidth="80"/>
									<DataGridTextColumn Binding="{Binding TreatmentColorString, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"  Header="Color Value" Width="*">
										<DataGridTextColumn.ElementStyle>
											<Style TargetType="{x:Type TextBlock}">
												<Setter Property="Background" Value="{Binding TreatmentColorBrush, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
												<Setter Property="Foreground" Value="{Binding TreatmentFontColorBrush, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
											</Style>
										</DataGridTextColumn.ElementStyle>
									</DataGridTextColumn>
								</DataGrid.Columns>
							</DataGrid>
							<Grid Grid.Column="0" Grid.Row="1">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition/>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>
								<!--<Button x:Name="treatmentRowButtonColor" Grid.Column="0" Grid.Row="0" Width="80" Margin="5,0" Click="treatmentRowButtonAdd_Click"> -->


								<xctk:ColorPicker  Grid.Column="0" Grid.Row="0" SelectedColor="{Binding TreatmentSelectColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=White}" UsingAlphaChannel="False" />
								<Label Content="Select the treatments and then add the color."  Grid.Column="1" Grid.Row="0"/>
								<Button x:Name="treatmentRowButtonAdd" Grid.Column="2" Grid.Row="0" Content="Add Treatment Row" Width="140" Margin="5,0" Command="{Binding Path=AddTreatmentRowCommand}" />
								<Button x:Name="treatmentRowButtonRemove" Grid.Column="3" Grid.Row="0" Content="Remove Treatment Row" Width="140" Margin="5,0" Command="{Binding Path=RemoveTreatmentRowCommand}" />
							</Grid>

						</Grid>
					</GroupBox>

				</Grid>
			</TabItem>
			<!-- Balancing Tab -->
			<TabItem Header="Balancing">
				<Grid Background="#FFF">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition/>
						<ColumnDefinition/>
					</Grid.ColumnDefinitions>
					<!-- Balancing Room List -->
					<GroupBox x:Name="balancingRoomListGroup" Grid.Column="0" Header="Room List" Margin="5,0">
						<ListBox x:Name="balancingRoomList"  MinWidth="150" SelectedIndex="0" SelectionChanged="balancingRoomList_SelectionChanged" AutomationProperties.ItemType="String" />
					</GroupBox>

					<!-- Difficulty Modifier Overview -->
					<GroupBox  x:Name="difficultyModifierListGroup" Header="Difficulty Modifier" Grid.Column="1" Margin="5,0">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition/>
							</Grid.ColumnDefinitions>
							<!-- Difficulty Modifier List -->
							<ListBox x:Name="difficultyModifierList" ItemsSource="{Binding Path=DifficultyModifierList, Mode=OneWay}" Margin="0,0,0,5" SelectionChanged="difficultyModifierList_SelectionChanged" />

							<!-- Difficulty Modifier Controls -->
							<Grid Grid.Column="0" Grid.Row="1" Margin="0,5">
								<Grid.ColumnDefinitions>
									<ColumnDefinition/>
									<ColumnDefinition/>
									<ColumnDefinition/>
								</Grid.ColumnDefinitions>
								<Button x:Name="diffModifierRowButtonAdd" Grid.Column="0" Grid.Row="0" Content="Add"  Margin="5,0" Click="diffModifierRowButtonAdd_Click" Width="50"/>
								<xctk:DecimalUpDown x:Name="diffModifierValue" Grid.Column="1" Grid.Row="0" DefaultValue="1.0" DisplayDefaultValueOnEmptyText="True" Increment="0.5" Minimum="0" Maximum="1000" MouseWheelActiveTrigger="MouseOver" ParsingNumberStyle="Float" TextAlignment="Left" Value="1" Width="50" />
								<Button x:Name="diffModifierRowButtonRemove" Grid.Column="2" Grid.Row="0" Content="Remove" Margin="5,0" Width="50" Click="diffModifierRowButtonRemove_Click"/>
							</Grid>

						</Grid>
					</GroupBox>

					<!-- Calculated Values Overview -->
					<GroupBox x:Name="calculatedValuesGroup" Header="Calculated Values" Grid.Column="2" Margin="5,0">
						<Grid >
							<Grid.RowDefinitions>
								<RowDefinition/>
								<RowDefinition/>
								<RowDefinition/>
								<RowDefinition/>
								<RowDefinition/>
								<RowDefinition/>
								<RowDefinition/>
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="2*"/>
								<ColumnDefinition/>
							</Grid.ColumnDefinitions>

							<Label MinWidth="150" Grid.Column="0" Grid.Row="0" MaxHeight="25" Content="Average Entry Time Per Patient: " Margin="0,5" />
							<Label MinWidth="200" Grid.Column="0" Grid.Row="1" MaxHeight="25" Content="Time Between Patients: " Margin="0,5" />
							<Label MinWidth="150" Grid.Column="0" Grid.Row="2" MaxHeight="25" Content="Number of Patients: " Margin="0,5"/>
							<Label MinWidth="150" Grid.Column="0" Grid.Row="3" MaxHeight="25" Content="Treatment Per Patient: " Margin="0,5"/>
							<Label MinWidth="150" Grid.Column="0" Grid.Row="4" MaxHeight="25" Content="Time per Treatment: " Margin="0,5" />
							<Label MinWidth="150" Grid.Column="0" Grid.Row="5" MaxHeight="25" Content="Milisecond per Level: " Margin="0,5"/>
							<Label MinWidth="150" Grid.Column="0" Grid.Row="6" MaxHeight="25" Content="Minutes per Level: " Margin="0,5"/>

							<TextBox x:Name="averageEntryTimePerPatientValue" Grid.Column="1" Grid.Row="0" Text="{Binding Path=AverageEntryTimePerPatient, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,5" MaxHeight="25" IsReadOnly="True" />
							<TextBox x:Name="timeBetweenPatientsValue" Grid.Column="1" Grid.Row="1" Text="{Binding Path=TimeBetweenPatients, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,5" MaxHeight="25" IsReadOnly="True"/>
							<TextBox x:Name="numberOfPatientsValue" Grid.Column="1" Grid.Row="2" Text="{Binding Path=NumberOfPatients, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,5" MaxHeight="25" IsReadOnly="True"/>
							<TextBox x:Name="treatmentPerPatientValue" Grid.Column="1" Grid.Row="3" Text="{Binding Path=TreatmentPerPatient, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,5" MaxHeight="25" IsReadOnly="True"/>
							<TextBox x:Name="timePerTreatmentValue" Grid.Column="1" Grid.Row="4" Text="{Binding Path=TimePerTreatment, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,5" MaxHeight="25" IsReadOnly="True"/>
							<TextBox x:Name="milliSecondsPerLevelValue" Grid.Column="1" Grid.Row="5" Text="{Binding Path=MilliSecondsPerLevel, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,5" MaxHeight="25" IsReadOnly="True"/>
							<TextBox x:Name="minutesPerLevelValue" Grid.Column="1" Grid.Row="6" Text="{Binding Path=MinutesPerLevel, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,5" MaxHeight="25" IsReadOnly="True"/>


						</Grid>
					</GroupBox>
					<!-- Calculated Values Overview -->
					<GroupBox x:Name="globalValuesGroup" Header="Global Values" Grid.Column="3" Margin="5,0">
						<Grid >
							<Grid.RowDefinitions>
								<RowDefinition/>
								<RowDefinition/>
								<RowDefinition/>
								<RowDefinition/>
								<RowDefinition/>
								<RowDefinition/>
								<RowDefinition/>
								<RowDefinition/>
								<RowDefinition/>
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="2*"/>
								<ColumnDefinition/>
							</Grid.ColumnDefinitions>
							<TextBlock MinWidth="150" Grid.Column="0" Grid.Row="0" MaxHeight="20" TextWrapping="WrapWithOverflow" Text="DifficultyModifier Treatments Based: " Margin="0,5">
							</TextBlock>
							<Label MinWidth="200" Grid.Column="0" Grid.Row="1" MaxHeight="25" Content="StartLevelDuration: " Margin="0,5" />
							<Label MinWidth="150" Grid.Column="0" Grid.Row="2" MaxHeight="25" Content="TimeIncreasePerLevel: " Margin="0,5"/>
							<Label MinWidth="150" Grid.Column="0" Grid.Row="3" MaxHeight="25" Content="InitialTimeBetweenPatients: " Margin="0,5"/>
							<Label MinWidth="150" Grid.Column="0" Grid.Row="4" MaxHeight="25" Content="DecreaseTimeBetweenPatients: " Margin="0,5" />
							<Label MinWidth="150" Grid.Column="0" Grid.Row="5" MaxHeight="25" Content="InitialTimePerTreatment: " Margin="0,5"/>
							<Label MinWidth="150" Grid.Column="0" Grid.Row="6" MaxHeight="25" Content="DecreaseTimePerTreatment: " Margin="0,5"/>
							<Label MinWidth="150" Grid.Column="0" Grid.Row="7" MaxHeight="25" Content="CheckoutPerPatient: " Margin="0,5"/>
							<Label MinWidth="150" Grid.Column="0" Grid.Row="8" MaxHeight="25" Content="TreatmentMinimumTime: " Margin="0,5"/>

							<TextBox Grid.Column="1" Grid.Row="0" Text="{Binding Source={x:Static Data:GameValues.TreatmentBasedDifficultyModifier}, Mode=OneWay}" Margin="0,5" MaxHeight="25" IsEnabled="False" />
							<TextBox Grid.Column="1" Grid.Row="1" Text="{Binding Source={x:Static Data:GameValues.StartLevelDuration}, Mode=OneWay}" Margin="0,5" MaxHeight="25" IsEnabled="False"/>
							<TextBox Grid.Column="1" Grid.Row="2" Text="{Binding Source={x:Static Data:GameValues.TimeIncreasePerLevel}, Mode=OneWay}" Margin="0,5" MaxHeight="25" IsEnabled="False"/>
							<TextBox Grid.Column="1" Grid.Row="3" Text="{Binding Source={x:Static Data:GameValues.InitialTimeBetweenPatients}, Mode=OneWay}" Margin="0,5" MaxHeight="25" IsEnabled="False"/>
							<TextBox Grid.Column="1" Grid.Row="4" Text="{Binding Source={x:Static Data:GameValues.DecreaseTimeBetweenPatients}, Mode=OneWay}" Margin="0,5" MaxHeight="25" IsEnabled="False"/>
							<TextBox Grid.Column="1" Grid.Row="5" Text="{Binding Source={x:Static Data:GameValues.InitialTimePerTreatment}, Mode=OneWay}" Margin="0,5" MaxHeight="25" IsEnabled="False"/>
							<TextBox Grid.Column="1" Grid.Row="6" Text="{Binding Source={x:Static Data:GameValues.DecreaseTimePerTreatment}, Mode=OneWay}" Margin="0,5" MaxHeight="25" IsEnabled="False"/>
							<TextBox Grid.Column="1" Grid.Row="7" Text="{Binding Source={x:Static Data:GameValues.CheckoutPerPatient}, Mode=OneWay}" Margin="0,5" MaxHeight="25" IsEnabled="False"/>
							<TextBox Grid.Column="1" Grid.Row="8" Text="{Binding Source={x:Static Data:GameValues.TreatmentMinimumTime}, Mode=OneWay}" Margin="0,5" MaxHeight="25" IsEnabled="False"/>

						</Grid>
					</GroupBox>

				</Grid>
			</TabItem>
		</TabControl>
		<StackPanel Grid.Row="1" Orientation="Horizontal" FlowDirection="RightToLeft" >
			<Button x:Name="buttonCancel" Content="Cancel" Margin="5,5" Width="50" Click="buttonCancel_Click"/>
			<Button x:Name="buttonSave" Content="Save" Margin="5,5"  Width="50" Click="buttonSave_Click" />

		</StackPanel>
	</Grid>
</Window>
