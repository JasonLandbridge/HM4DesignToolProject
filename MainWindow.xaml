<Window x:Class="HM4DesignTool.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:wpfTool="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
		xmlns:local="clr-namespace:HM4DesignTool"
		xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
		mc:Ignorable="d"
		Title="HM4 Design Tool" Height="768" Width="1280" Closed="Window_Closed">
	<!-- diag:PresentationTraceSources.TraceLevel=High-->
	<Window.Resources>

		<!-- PatientRowTreatmentTemplate -->
		<DataTemplate x:Key="PatientRowTreatmentTemplate">
			<ComboBox Margin="5,0" Style="{DynamicResource ComboBoxTest2}" ItemsSource="{Binding Mode=OneWay, ElementName=patientRow, Path=DataContext.TreatmentOptions}" SelectedValue="{Binding TreatmentName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=None}" Visibility="{Binding IsVisible, Mode=TwoWay, Converter={StaticResource VisibilityOfBool}, UpdateSourceTrigger=PropertyChanged}" Width="125">
				<ComboBox.Resources>
					<Style x:Key="ComboBoxTest2" TargetType="{x:Type ComboBox}">

						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="ComboBox">
									<Grid>
										<ToggleButton Grid.Column="2" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" >
											<ToggleButton.Template>
												<ControlTemplate>
													<Grid>
														<Grid.ColumnDefinitions>
															<ColumnDefinition Width="5*" />
															<ColumnDefinition Width="*" />
														</Grid.ColumnDefinitions>
														<Border x:Name="Border"  Grid.ColumnSpan="2" BorderBrush="Black" BorderThickness="1" />
														<Border Grid.Column="0" Margin="1"  Background="{Binding TreatmentColorBrush, Mode=OneWay, UpdateSourceTrigger=Default, FallbackValue=White}"  BorderBrush="Black" />
														<Path x:Name="Arrow" Grid.Column="1"  Fill="Black" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
													</Grid>
													<ControlTemplate.Triggers>
														<Trigger Property="ToggleButton.IsMouseOver" Value="true">
															<Setter TargetName="Border" Property="Background" Value="AliceBlue" />
														</Trigger>
													</ControlTemplate.Triggers>
												</ControlTemplate>
											</ToggleButton.Template>
										</ToggleButton>
										<ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3"  />
										<TextBox x:Name="PART_EditableTextBox" Foreground="{Binding TreatmentFontColorBrush, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
										<Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True"  Focusable="False" PopupAnimation="Slide">
											<Grid  Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
												<Border x:Name="DropDownBorder" Background="White" />
												<ScrollViewer SnapsToDevicePixels="True">
													<StackPanel IsItemsHost="True" />
												</ScrollViewer>
											</Grid>
										</Popup>
									</Grid>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
						<Style.Triggers>
						</Style.Triggers>
					</Style>

				</ComboBox.Resources>

			</ComboBox>
		</DataTemplate>
		<!--PatientRowControlTemplate-->
		<DataTemplate x:Key="PatientRowControlTemplate" >
			<Grid x:Name="patientRow" Margin="5,5,0,0">
				<Grid.RowDefinitions>
					<RowDefinition Height="25"/>
				</Grid.RowDefinitions>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>
				<CheckBox MinWidth="20" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,0,0,0" />
				<TextBox MinWidth="100" Grid.Column="1" Text="{Binding PatientName, FallbackValue=Patient, Mode=TwoWay}" />
				<wpfTool:IntegerUpDown Grid.Column="2" Margin="5,0" MinWidth="80" Value="{Binding Delay, FallbackValue=0, Mode=TwoWay}" Increment="100"/>
				<wpfTool:IntegerUpDown Grid.Column="3" Margin="5,0" MinWidth="80" Value="{Binding Weight, FallbackValue=0, Mode=TwoWay}" Increment="5"/>
				<Separator Grid.Column="4" Grid.Row="0" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Width="1" />
				<StackPanel Grid.Column="5" Orientation="Horizontal">
					<Button x:Name="randomizeButton" Content=" R " Margin="5,0" Width="30"/>
					<CheckBox x:Name="randomizeRangeCheck" Margin="5,0" VerticalAlignment="Center" HorizontalAlignment="Center"/>
					<StackPanel Orientation="Horizontal" Visibility="{Binding IsChecked, Converter={StaticResource VisibilityOfBool}, ElementName=randomizeRangeCheck}">
						<wpfTool:IntegerUpDown HorizontalContentAlignment="Stretch" />
						<Label Content="-" />
						<wpfTool:IntegerUpDown Margin="0,0,5,0" />
					</StackPanel>

				</StackPanel>
				<Separator Grid.Column="6" Grid.Row="0" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Width="1" />
				<ItemsControl Grid.Column="7" x:Name="patientTreatmentRow" ItemTemplate="{DynamicResource PatientRowTreatmentTemplate}" ItemsSource="{Binding TreatmentCollection, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
					<ItemsControl.ItemsPanel>
						<ItemsPanelTemplate>
							<WrapPanel />
						</ItemsPanelTemplate>
					</ItemsControl.ItemsPanel>
				</ItemsControl>
				<Button  Grid.Column="8" Content="Treatments" MinWidth="80" Visibility="Hidden"/>
				<Button  Grid.Column="9" Content="Traits" MinWidth="80" Command="{Binding OpenTraitsWindowCommand}"/>
			</Grid>
		</DataTemplate>
		<!--PatientChancesRowTemplate-->
		<DataTemplate x:Key="PatientChancesRowTemplate">
			<Grid Margin="0,5">
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto"/>
				</Grid.RowDefinitions>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>
				<CheckBox MinWidth="20" Grid.Column="0" HorizontalAlignment="Center" Margin="5,0" VerticalContentAlignment="Center" IsChecked="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
				<TextBox TextWrapping="Wrap" Text="{Binding PatientName, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Margin="5,5,0,5" Width="200" MinWidth="100" IsReadOnlyCaretVisible="False" VerticalContentAlignment="Center" IsEnabled="True" IsReadOnly="True"/>
				<Button Content="R" Grid.Column="2" Margin="5" Width="30" MinWidth="20" Padding="5" Command="{Binding RandomizeWeightCommand}" CommandParameter="{Binding}"/>
				<Label Content="{Binding Weight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="3" Margin="0" Width="50" MinWidth="25" VerticalContentAlignment="Center" HorizontalAlignment="Center" HorizontalContentAlignment="Center"/>
				<Slider Grid.Column="4" Margin="5" VerticalContentAlignment="Stretch" VerticalAlignment="Center" Value="{Binding Weight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Maximum="100" LargeChange="5" SmallChange="1" Cursor="Hand"/>
				<Label Content="{Binding PercentageString, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="5" Margin="0" VerticalContentAlignment="Center" Width="100" HorizontalAlignment="Left"/>
			</Grid>
		</DataTemplate>
	</Window.Resources>
	<Grid VerticalAlignment="Stretch" Margin="0,0,0,0">
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition/>
			<RowDefinition Height="Auto"/>
		</Grid.RowDefinitions>
		<!-- Menu Items -->
		<DockPanel Grid.Row="0">
			<Menu DockPanel.Dock="Top">
				<MenuItem Header="_File">
					<MenuItem  x:Name="menuItemNewLevel" Header="_Create New Levels" Click="menuItemNewLevel_Click"/>
					<MenuItem x:Name="menuItemExportLevelList" Header="_Create Level List" Click="menuItemExportLevelList_Click"/>
					<MenuItem Header="_Save"/>
					<MenuItem Header="_Close"/>

				</MenuItem>
				<MenuItem x:Name="menuItemSettings" Header="_Settings" Click="menuItemSettings_Click"/>
				<MenuItem Header="_View"/>
				<MenuItem Header="_Help" Click="MenuItem_Click"/>

			</Menu>
			<StackPanel></StackPanel>
		</DockPanel>

		<!-- Main Layout -->
		<Grid x:Name="mainLayout" Grid.Row="1">
			<Grid.RowDefinitions>
				<RowDefinition Height="1*"/>
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="1*"/>
			</Grid.ColumnDefinitions>
			<!-- Level List -->
			<Grid x:Name="levelListLayout" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="0,0,0,0">
				<Grid.RowDefinitions>
					<RowDefinition Height=".9*"/>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="Auto"/>
				</Grid.RowDefinitions>
				<Grid.ColumnDefinitions>
					<ColumnDefinition/>
				</Grid.ColumnDefinitions>
				<!-- Level List -->
				<GroupBox Header="Level List" VerticalAlignment="Stretch" Margin="0,0,0,0">
					<TreeView x:Name="levelListDisplay" Margin="0" ItemsSource="{Binding LevelListDisplayCollection, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" MinWidth="216" />
				</GroupBox>
				<!-- Level List Filters-->
				<GroupBox Header="Filters" HorizontalAlignment="Stretch" Margin="0,0,0,0" Grid.Row="1">
					<StackPanel x:Name="filterLayout" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Margin="0,0,0,0">
						<ComboBox x:Name="levelListFilter" SelectedIndex="{Binding LevelListFilterSelectedIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=0}" ItemsSource="{Binding LevelListFilterItems, Mode=OneWay, UpdateSourceTrigger=Default}" />
						<Grid x:Name="filterCheckLayout" Margin="0,5" >
							<Grid.ColumnDefinitions>
								<ColumnDefinition/>
								<ColumnDefinition/>
								<ColumnDefinition/>
							</Grid.ColumnDefinitions>
							<CheckBox x:Name="levelListStoryCheck" Content="Story" Grid.Column="0" Margin="5,0,0,0" IsChecked="{Binding LevelListStoryCheck, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
							<CheckBox x:Name="levelListBonusCheck" Content="Bonus" Grid.Column="1" Margin="5,0,0,0" IsChecked="{Binding LevelListBonusCheck, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
							<CheckBox x:Name="levelListUnknownCheck" Content="Unknown" Grid.Column="2" Margin="5,0,0,0"  IsChecked="{Binding LevelListUnknownCheck, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
						</Grid>

					</StackPanel>
				</GroupBox>

				<!--Level Controls-->
				<Grid x:Name="levelControls" Grid.Row="2" IsEnabled="{Binding Path=LevelOverviewActive}">
					<Grid.ColumnDefinitions>
						<ColumnDefinition/>
						<ColumnDefinition/>
						<ColumnDefinition/>
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
					</Grid.RowDefinitions>
					<Button x:Name="reloadLevel" Grid.Column="0" Grid.Row="0" Content="Reload" Margin="5" Width="50" Command="{Binding ReloadLevelCommand}" />
					<Button x:Name="buttonOpenLevelScript" Grid.Column="1" Grid.Row="0" Content="Open" Margin="5" Width="50" Command="{Binding GetLevelLoaded.OpenLevelFromFileCommand}"/>
					<Button x:Name="buttonSaveLevelScript" Grid.Column="2" Grid.Row="0" Content="Save" Margin="5" Width="50" Command="{Binding GetLevelLoaded.SaveLevelToFileCommand}" />

				</Grid>

			</Grid>
			<!-- Level Data -->
			<Grid x:Name="levelDataLayout" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="1" >
				<Grid.RowDefinitions>
					<RowDefinition/>
					<RowDefinition/>
					<RowDefinition Height="Auto"/>
				</Grid.RowDefinitions>
				<Grid.ColumnDefinitions>
					<ColumnDefinition/>
				</Grid.ColumnDefinitions>
				<!--Level Overview Tabs-->
				<TabControl HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
					<TabItem Header="General">
						<Grid Background="#FFF" IsEnabled="{Binding Path=LevelOverviewActive}">
							<Grid.ColumnDefinitions>
								<ColumnDefinition/>
								<ColumnDefinition/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
							<!-- Design Data Group-->
							<GroupBox Grid.Column="0" Header="Design Data" HorizontalAlignment="Stretch" Margin="0,5" VerticalAlignment="Stretch">
								<Grid HorizontalAlignment="Stretch" Margin="0" VerticalAlignment="Stretch">
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto"/>
										<RowDefinition Height="Auto"/>
										<RowDefinition/>
									</Grid.RowDefinitions>
									<Grid Grid.Column="0" Grid.Row="0">
										<Grid.RowDefinitions>
											<RowDefinition/>
											<RowDefinition/>
											<RowDefinition/>
											<RowDefinition/>
											<RowDefinition/>
											<RowDefinition/>
										</Grid.RowDefinitions>
										<Grid.ColumnDefinitions>
											<ColumnDefinition/>
											<ColumnDefinition/>
										</Grid.ColumnDefinitions>
										<Label MinWidth="100" Grid.Column="0" Grid.Row="0" Content="Part of Room: " Margin="0,5" />
										<Label MinWidth="100" Grid.Column="0" Grid.Row="1" Content="Difficulty Modifier: " Margin="0,5" />
										<Label MinWidth="100" Grid.Column="0" Grid.Row="3" Content="Level Type: " Margin="0,5"/>
										<Label MinWidth="100" Grid.Column="0" Grid.Row="4" Content="Gameplay Character: " Margin="0,5"/>

										<wpfTool:IntegerUpDown x:Name="roomIndexValue" MinWidth="100" Grid.Column="1" Grid.Row="0" Margin="0,5" Value="{Binding RoomIndex, UpdateSourceTrigger=PropertyChanged, FallbackValue=-1}" DefaultValue="0"/>
										<Grid Grid.Column="1" Grid.Row="1" Margin="0,5">
											<Grid.ColumnDefinitions>
												<ColumnDefinition/>
											</Grid.ColumnDefinitions>
											<ComboBox Grid.Column="1" Grid.Row="0" HorizontalAlignment="Stretch" Margin="5,0" VerticalAlignment="Stretch" ItemsSource="{Binding Path=DifficultyModifierList, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" SelectedValue="{Binding DifficultyModifierString, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, diag:PresentationTraceSources.TraceLevel=High}"/>
											<!-- <wpfTool:DecimalUpDown Grid.Column="1" Grid.Row="0" HorizontalAlignment="Stretch" Margin="0" VerticalAlignment="Stretch" Visibility="{Binding ElementName=difficultyModifierCheckBox, Path=IsChecked}"/> -->
										</Grid>
										<Grid Grid.Column="1" Grid.Row="2" Margin="0,5">
											<Grid.ColumnDefinitions>
												<ColumnDefinition/>
												<ColumnDefinition Width="Auto"/>
												<ColumnDefinition/>
											</Grid.ColumnDefinitions>
										</Grid>
										<ComboBox x:Name="levelTypeDropDown" Grid.Column="1" Grid.Row="3"  Margin="5,5" ItemsSource="{Binding Path=GetLevelTypes, Mode=OneTime}" SelectedIndex="0" SelectedValue="{Binding GetLevelLoaded.GetLevelTypeString, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
										<TextBox Grid.Row="4" Grid.Column="1" Margin="5,5" Text="{Binding GetLevelLoaded.GameplayCharacter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged }"/>


									</Grid>
									<Separator  Grid.Column="0" Grid.Row="1" />
									<Grid  Grid.Column="0" Grid.Row="2">
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto"/>
											<RowDefinition/>
										</Grid.RowDefinitions>
										<Grid.ColumnDefinitions>
											<ColumnDefinition/>
											<ColumnDefinition Width="Auto"/>
										</Grid.ColumnDefinitions>
										<Label MinWidth="100" Grid.Column="0" Grid.Row="0" Content="HM4 Design Tool Data: " />
										<CheckBox Grid.Column="1" Grid.Row="0" Content="Insert Data" VerticalContentAlignment="Center" IsChecked="{Binding InsertDesignData, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
										<TextBox Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Text="{Binding GetLevelLoaded.DesignToolDataString, Mode=OneWay}"/>
									</Grid>
								</Grid>
							</GroupBox>

							<!-- Random Data Group-->
							<GroupBox Grid.Column="1" Header="Randomize Data" HorizontalAlignment="Stretch" Margin="0,5" VerticalAlignment="Stretch" >
								<!--IsEnabled="{Binding RandomGroupEnabled, Mode=OneWay, UpdateSourceTrigger=PropertyChanged} -->
								<Grid HorizontalAlignment="Stretch" Margin="0" VerticalAlignment="Stretch" >
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto"/>
										<RowDefinition Height="Auto"/>
										<RowDefinition Height="Auto"/>
										<RowDefinition Height="Auto"/>
										<RowDefinition/>
										<RowDefinition Height="Auto"/>
									</Grid.RowDefinitions>
									<Grid Grid.Row="0">
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto"/>
										</Grid.RowDefinitions>
										<Grid.ColumnDefinitions>
											<ColumnDefinition/>
											<ColumnDefinition Width="Auto"/>
										</Grid.ColumnDefinitions>
										<CheckBox x:Name="useRecommendationsCheckBox" Grid.Column="1" Content="Recommendations" Margin="0,0,10,0" IsChecked="{Binding UseRandomRecommendations, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=true}"/>
									</Grid>
									<!-- Random Patient Chances Group-->
									<GroupBox Header="Patient Chances" HorizontalAlignment="Stretch" Margin="0,5" VerticalAlignment="Stretch" Grid.Row="1">
										<Grid >
											<Grid.RowDefinitions>
												<RowDefinition/>
											</Grid.RowDefinitions>
											<Grid.ColumnDefinitions>
												<ColumnDefinition/>
												<ColumnDefinition/>
											</Grid.ColumnDefinitions>
											<CheckBox Content="Patient Types" VerticalContentAlignment="Center" Margin="10,0,0,0" IsChecked="{Binding GeneratePatientTypeCheck, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=true}" />
											<Grid Grid.Column="1" Grid.Row="1" Margin="0,5">
												<Grid.RowDefinitions>
													<RowDefinition Height="20"/>
												</Grid.RowDefinitions>
												<Grid.ColumnDefinitions>
													<ColumnDefinition/>
													<ColumnDefinition Width="Auto"/>
													<ColumnDefinition/>
												</Grid.ColumnDefinitions>
												<wpfTool:IntegerUpDown Grid.Column="0" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Margin="5,0" Minimum="1" Value="{Binding GeneratePatientTypeMin, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Maximum="{Binding GeneratePatientTypeMax, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="False" AllowTextInput="False"/>
												<Label Grid.Column="1" Grid.Row="0" Content="-" Margin="10,0" HorizontalContentAlignment="Stretch" FontWeight="Bold" />
												<wpfTool:IntegerUpDown Grid.Column="2" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Margin="5,0" Minimum="1" Value="{Binding GeneratePatientTypeMax, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Maximum="{Binding GeneratePatientTypeMax, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="False" AllowTextInput="False"/>
											</Grid>

										</Grid>
									</GroupBox>
									<!-- Random Patient Composition Group-->
									<GroupBox Header="Patient Composition" HorizontalAlignment="Stretch" Margin="0,5" VerticalAlignment="Stretch" Grid.Row="2">
										<Grid>
											<Grid.RowDefinitions>
												<RowDefinition Height="Auto"/>
												<RowDefinition Height="Auto"/>
												<RowDefinition Height="Auto"/>
												<RowDefinition Height="Auto"/>
											</Grid.RowDefinitions>
											<Grid.ColumnDefinitions>
												<ColumnDefinition/>
												<ColumnDefinition/>
											</Grid.ColumnDefinitions>
											<!-- Random Data - Patients -->
											<CheckBox Content="Patients Amount" Grid.Column="0" Grid.Row="0" VerticalContentAlignment="Center" Margin="10,0,0,0" IsChecked="{Binding GeneratePatientsCheck, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=true}" />
											<Grid Grid.Column="1" Grid.Row="0" Margin="0,5">
												<Grid.RowDefinitions>
													<RowDefinition Height="20"/>
												</Grid.RowDefinitions>
												<Grid.ColumnDefinitions>
													<ColumnDefinition/>
													<ColumnDefinition Width="Auto"/>
													<ColumnDefinition/>
												</Grid.ColumnDefinitions>
												<wpfTool:IntegerUpDown Grid.Column="0" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Margin="5,0" Value="{Binding GeneratePatientsMin, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Minimum="1" Maximum="50" AllowTextInput="False"/>
												<Label Grid.Column="1" Grid.Row="0" Content="-" Margin="10,0" HorizontalContentAlignment="Stretch" />
												<wpfTool:IntegerUpDown Grid.Column="2" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Margin="5,0" Value="{Binding GeneratePatientsMax, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Minimum="0" Maximum="50" AllowTextInput="False"/>
											</Grid>
											<!-- Random Data - Delay -->
											<CheckBox Content="Patients Delay" Grid.Column="0" Grid.Row="1" VerticalContentAlignment="Center" Margin="10,0,0,0" IsChecked="{Binding GeneratePatientDelayCheck, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=true}" />
											<Grid Grid.Column="1" Grid.Row="1" Margin="0,5">
												<Grid.RowDefinitions>
													<RowDefinition Height="20"/>
												</Grid.RowDefinitions>
												<Grid.ColumnDefinitions>
													<ColumnDefinition/>
													<ColumnDefinition Width="Auto"/>
													<ColumnDefinition/>
												</Grid.ColumnDefinitions>
												<wpfTool:IntegerUpDown Grid.Column="0" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Margin="5,0" Value="{Binding GeneratePatientDelayMin, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" Minimum="-10000" Maximum="10000" DefaultValue="-1000" AllowTextInput="False" Increment="100"/>
												<Label Grid.Column="1" Grid.Row="0" Content="-" Margin="10,0" HorizontalContentAlignment="Stretch" />
												<wpfTool:IntegerUpDown Grid.Column="2" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Margin="5,0" Value="{Binding GeneratePatientDelayMax, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" Minimum="-10000" Maximum="10000" DefaultValue="1000" AllowTextInput="False" ClipValueToMinMax="True" Increment="100"/>
											</Grid>

											<!-- Random Data - Treatments -->
											<CheckBox Content="Treatment Amount" Grid.Column="0" Grid.Row="2" VerticalContentAlignment="Center" Margin="10,0,0,0" IsChecked="{Binding GenerateTreatmentsCheck, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=true}"/>
											<Grid Grid.Column="1" Grid.Row="2" Margin="0,5">
												<Grid.RowDefinitions>
													<RowDefinition Height="20"/>
												</Grid.RowDefinitions>
												<Grid.ColumnDefinitions>
													<ColumnDefinition/>
													<ColumnDefinition Width="Auto"/>
													<ColumnDefinition/>
												</Grid.ColumnDefinitions>
												<wpfTool:IntegerUpDown Grid.Column="0" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Margin="5,0" Value="{Binding GenerateTreatmentsMin, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Minimum="1" Maximum="50" AllowTextInput="False" />
												<Label Grid.Column="1" Grid.Row="0" Content="-" Margin="10,0" HorizontalContentAlignment="Stretch"/>
												<wpfTool:IntegerUpDown Grid.Column="2" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Margin="5,0" Value="{Binding GenerateTreatmentsMax, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Minimum="1" Maximum="50" AllowTextInput="False"/>
											</Grid>
											<!-- Random Data - Weight -->
											<CheckBox Content="Weight" Grid.Column="0" Grid.Row="3" VerticalContentAlignment="Center" Margin="10,0,0,0" Visibility="{Binding GetLevelLoaded.WeightEnabled, Converter={StaticResource VisibilityOfBool}}" IsChecked="{Binding GenerateWeightCheck, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  />
											<Grid Grid.Column="1" Grid.Row="3" Margin="0,5" Visibility="{Binding GetLevelLoaded.WeightEnabled, Converter={StaticResource VisibilityOfBool}}">
												<Grid.RowDefinitions>
													<RowDefinition Height="20"/>
												</Grid.RowDefinitions>
												<Grid.ColumnDefinitions>
													<ColumnDefinition/>
													<ColumnDefinition Width="Auto"/>
													<ColumnDefinition/>
												</Grid.ColumnDefinitions>
												<wpfTool:IntegerUpDown Grid.Column="0" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Margin="5,0" Minimum="0" Maximum="100" DefaultValue="10" Increment="5" Value="{Binding GenerateWeightMin, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" AllowTextInput="False"/>
												<Label Grid.Column="1" Grid.Row="0" Content="-" Margin="10,0" HorizontalContentAlignment="Stretch" />
												<wpfTool:IntegerUpDown Grid.Column="2" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Margin="5,0" Minimum="0" Maximum="100" DefaultValue="90" Increment="5" Value="{Binding GenerateWeightMax, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" AllowTextInput="False"/>
											</Grid>

										</Grid>

									</GroupBox>
									<!-- Random Treatment Preview Group-->
									<Grid Grid.Row="3">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto"/>
											<ColumnDefinition/>
											<ColumnDefinition Width="Auto"/>

										</Grid.ColumnDefinitions>

										<CheckBox x:Name="showAvailableTreatmentsCheck" Content="Show available treatments" Grid.Column="0" Grid.Row="0" VerticalContentAlignment="Center" Margin="10,5,0,5" IsChecked="{Binding ShowAvailableTreatmentsCheck, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
										<CheckBox x:Name="uniqueTreatmentsCheckBox" Content="Unique Treatments Only Per Patient" Grid.Column="1" Grid.Row="0" VerticalContentAlignment="Center" Margin="10,5,0,5" IsEnabled="False" IsChecked="True" Visibility="Hidden"/>
										<Button x:Name="customTreatmentWeightsButton" Content="Custom Treatment Weights" Grid.Column="2" Grid.Row="0" Click="customTreatmentWeightsButton_Click" Padding="10,1" />
									</Grid>
									<Button x:Name="generateLevelButton" Grid.Row="6" Content="Generate Level" Margin="0,5" Padding="1,5" Click="generateLevelButton_Click"/>
								</Grid>
							</GroupBox>

							<GroupBox Grid.Column="2" Header="Available Treatments" Visibility="{Binding DataContext.ShowAvailableTreatmentsCheck, Mode=OneWay, Converter={StaticResource VisibilityOfBool}, RelativeSource={RelativeSource Self}, FallbackValue=Collapsed}">
								<TextBox x:Name="previewAvailableTreatments" Margin="0,5" Text="{Binding GetLevelLoaded.TreatmentsAvailableString, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"  TextWrapping="Wrap" MinWidth="250"/>
							</GroupBox>
						</Grid>
					</TabItem>
					<TabItem Header="Patient Overview" IsEnabled="{Binding Path=LevelOverviewActive}">
						<TabItem.Background>
							<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
								<GradientStop Color="#FFF0F0F0" Offset="0"/>
								<GradientStop Color="#FFE5E5E5" Offset="1"/>
								<GradientStop Color="#FFEEEEEE"/>
							</LinearGradientBrush>
						</TabItem.Background>
						<Grid Background="#FFF" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True">
							<Grid.RowDefinitions>
								<RowDefinition x:Name="PatientOverviewHeader" Height="40"/>
								<RowDefinition/>
								<RowDefinition x:Name="PatientOverviewFooter" Height="40"/>
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition/>
							</Grid.ColumnDefinitions>

							<!-- Patient Overview Header -->
							<Grid Margin="5,5,0,0" >
								<Grid.RowDefinitions>
									<RowDefinition Height="30"/>
								</Grid.RowDefinitions>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>
								<CheckBox MinWidth="20" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,0,0,0" />
								<Label MinWidth="100" Grid.Column="1" Content="Patient Name" />
								<Label MinWidth="80" Margin="5,0" Grid.Column="2" Content="Delay" />
								<Label MinWidth="80" Margin="5,0" Grid.Column="3" Content="Weight" />
								<Label Grid.Column="4" Content="Randomize" />
								<Label Grid.Column="5" Content="Treatments" />

							</Grid>

							<!-- Patient Overview -->
							<ScrollViewer HorizontalAlignment="Stretch" Grid.Row="1" VerticalAlignment="Stretch" HorizontalScrollBarVisibility="Auto" >
								<ItemsControl x:Name="patientOverviewLayout" ItemTemplate="{DynamicResource PatientRowControlTemplate}"  ItemsSource="{Binding GetLevelLoaded.PatientCollection, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
							</ScrollViewer>

							<!-- Patient Overview Footer -->
							<Grid HorizontalAlignment="Stretch" Margin="0" Grid.Row="2" VerticalAlignment="Stretch">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="0.5*"/>
									<ColumnDefinition Width="0.7*"/>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>

								<Grid x:Name="maxTreatmentGrid" Grid.Column="1">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>
									<Label x:Name="maxTreatmentsLabel" Content="Max Treatments" Grid.Column="0" VerticalAlignment="Center"/>
									<wpfTool:IntegerUpDown x:Name="maxTreatmentsValue" Grid.Column="1" MinWidth="50" Margin="0,10" ClipValueToMinMax="True" Maximum="50" Minimum="1" DefaultValue="5" Value="{Binding MaxTreatmentsVisible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" DisplayDefaultValueOnEmptyText="True"/>
								</Grid>

								<Button x:Name="buttonPatientOverviewAddRow" Grid.Column="2" Content="Add Row" Width="80" Margin="5,5" Click="buttonPatientOverviewAddRow_Click" />
								<Button x:Name="buttonPatientOverviewRemoveRow" Grid.Column="3" Content="Remove Row" Width="80" Margin="5,5" />
							</Grid>

						</Grid>
					</TabItem>
					<TabItem Header="Patient Chances" IsEnabled="{Binding Path=LevelOverviewActive}">
						<Grid Background="#FFF">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<!-- Patient Chance Overview Header -->
							<Grid Margin="0,5" Grid.Row="0">
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"/>
								</Grid.RowDefinitions>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition/>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="18"/>
								</Grid.ColumnDefinitions>
								<CheckBox x:Name="selectAllPatientChancesCheckbox" HorizontalAlignment="Center" VerticalAlignment="Center" MinWidth="20" Margin="5,0" Command="{Binding GetLevelLoaded.SelectAllPatientChancesCommand}" CommandParameter="{Binding Path=IsChecked, RelativeSource={RelativeSource Self}}" Click="selectAllPatientChancesCheckbox_Click" IsChecked="True"/>
								<Label Content="Patient Name" Grid.Column="1" Margin="5,0,0,0" Width="200" MinWidth="100" VerticalContentAlignment="Center" FontWeight="Bold"/>
								<Label Content=" " Grid.Column="2" Margin="10,5" Width="20" MinWidth="20"/>
								<Label Content="Weight" Grid.Column="3" Margin="0" VerticalContentAlignment="Center" FontWeight="Bold"/>
								<Label Content="Chance" Grid.Column="5" Margin="0" VerticalContentAlignment="Center" Width="100" FontWeight="Bold" HorizontalAlignment="Left"/>
							</Grid>
							<!-- Patient Chance Overview -->
							<ScrollViewer HorizontalAlignment="Stretch" Grid.Row="1" VerticalAlignment="Stretch" HorizontalScrollBarVisibility="Auto" >
								<ItemsControl x:Name="patientChanceOverviewLayout" ItemTemplate="{DynamicResource PatientChancesRowTemplate}"  ItemsSource="{Binding GetLevelLoaded.PatientChanceCollection, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
							</ScrollViewer>
							<!-- Patient Chance Overview Footer -->
							<Grid Grid.Row="2">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition/>
								</Grid.ColumnDefinitions>
								<Button Content="Randomize Weights" Margin="5" Padding="5" Command="{Binding GetLevelLoaded.RandomizeAllWeightCommand}" CommandParameter="{Binding}"/>
							</Grid>





						</Grid>
					</TabItem>
					<TabItem Header="Simulator" HorizontalAlignment="Left" Height="20" VerticalAlignment="Top" IsEnabled="{Binding Path=LevelOverviewActive}">
						<Grid Background="#FFE5E5E5">
							<Grid.RowDefinitions>
								<RowDefinition/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>

							<DataGrid x:Name="patientSimulatorGrid" Grid.Row="0"  FrozenColumnCount="1" SelectionUnit="Cell" CanUserDeleteRows="False" CanUserAddRows="False" AutoGenerateColumns="False" CanUserSortColumns="False">
							</DataGrid>

							<Slider Grid.Row="1" />
						</Grid>
					</TabItem>
				</TabControl>
				<!-- Level Script Previews-->
				<Grid x:Name="previewSplitContainer" HorizontalAlignment="Stretch" Grid.Row="1" VerticalAlignment="Stretch">
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
						<RowDefinition/>
					</Grid.RowDefinitions>
					<Grid.ColumnDefinitions>
						<ColumnDefinition/>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition/>
					</Grid.ColumnDefinitions>
					<Label x:Name="currentPreviewLabel" Grid.Column="0" Grid.Row="0" Content="Current Preview"/>
					<Grid Grid.Column="2" Grid.Row="0">
						<Grid.ColumnDefinitions>
							<ColumnDefinition/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>
						<Label x:Name="afterPreviewLabel" Grid.Column="0" Grid.Row="0" Content="After Preview"/>
						<CheckBox x:Name="autoUpdateCheckbox" Grid.Column="1" Grid.Row="0" IsChecked="{Binding AllowLevelScriptUpdate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=true}" Content="Auto Update" Margin="0,0,10,0" VerticalAlignment="Center" />
					</Grid>

					<TextBox x:Name="currentPreviewTextBox" Text="{Binding Path=GetLevelLoaded.GetCurrentLevelScript, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=''}" Grid.Column="0" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextWrapping="Wrap" />
					<GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Width="5" Grid.RowSpan="2"/>
					<TextBox x:Name="afterPreviewTextBox" Text="{Binding Path=GetLevelLoaded.LevelScriptBuffer, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=''}" Grid.Column="2" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" TextWrapping="Wrap"/>

				</Grid>
			</Grid>
		</Grid>
		<StatusBar x:Name="mainStatusBar" Height="25" VerticalAlignment="Bottom" Grid.Row="2" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
			<TextBlock x:Name="mainStatusText" Text=""  />
		</StatusBar>
	</Grid>
</Window>
